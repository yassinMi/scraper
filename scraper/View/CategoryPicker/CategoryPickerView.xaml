<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:scraper.View.CategoryPicker"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:model="clr-namespace:scraper.Model"
             xmlns:catPickerModel="clr-namespace:scraper.Model.CategoryPicker"
             xmlns:viewModel="clr-namespace:scraper.ViewModel"
             xmlns:custom="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:TemplateSelectors="clr-namespace:scraper.View.TemplateSelectors"
             xmlns:CategoryPicker="clr-namespace:scraper.ViewModel.CategoryPicker" x:Class="scraper.View.CategoryPicker.CategoryPickerView"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" d:DataContext="{d:DesignInstance {x:Type CategoryPicker:CategoryPickerVM}, IsDesignTimeCreatable=True}" MinWidth="300" Height="300">
    <UserControl.Resources>
        <DataTemplate  DataType="{x:Type catPickerModel:ExplorerFolder}" >
            <Grid  >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="12" />
                    <ColumnDefinition Width="12" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <!--Image Grid.Column="0" VerticalAlignment="Center" Visibility="{Binding Attributes.IsClass, Converter={StaticResource BooleanToVisibilityConverter}}" Width="12" Height="12" Source="Media/Icons/explorer-element-class.png"  /-->
                <!--materialDesign:PackIcon Width="12" Height="12" Kind="FolderOutline" VerticalAlignment="Center" /-->
                <TextBlock Grid.Column="2" Text="{Binding Name}" Margin="4 0 0 0" VerticalAlignment="Center" />
            </Grid>
        </DataTemplate>
        <DataTemplate  DataType="{x:Type catPickerModel:ExplorerTarget}" >
            <Grid  >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="12" />
                    <ColumnDefinition Width="12" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Start scraping" Command="{Binding RequestStartCommand}" />
                    </ContextMenu>
                </Grid.ContextMenu>
                <!--materialDesign:PackIcon Width="13"   Kind="FileOutline" VerticalAlignment="Center" /-->
                <TextBlock Grid.Column="2"  Margin="8 0 0 0" VerticalAlignment="Center"  >
                    <Run TextElement.FontWeight="Bold" Text="{Binding Name}" /> <Run Foreground="{StaticResource AppImportantDataColor }" Text="{Binding ElementsCount, StringFormat=(\{0\} Companies)}" />
                </TextBlock>
            </Grid>
        </DataTemplate>

    </UserControl.Resources>
    <Grid Margin="12,18">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="21*"/>
        </Grid.RowDefinitions>
        <TextBlock x:Name="textBlock" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Center" Margin="0,10" FontSize="16" Text="Pick category:"/>

        <TreeView materialDesign:TreeViewAssist.ShowSelection="False" materialDesign:TransitionAssist.DisableTransitions="True" materialDesign:RippleAssist.IsDisabled="True"    ItemsSource="{Binding Children}"  materialDesign:TreeViewAssist.ExpanderSize="2" x:Name="treeView" Margin="10" Grid.Row="1" VerticalAlignment="Stretch">
            <TreeView.Resources>
                <catPickerModel:ExplorerTarget Name="My target 1" x:Key="file1" />
                <catPickerModel:ExplorerFolder x:Key="fol1" Name="My Folder 1" />
                <Style  TargetType="{x:Type TreeViewItem}">
                    <Setter Property="ItemsSource" Value="{Binding Children}"/>
                    
                    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="Padding" Value="8"/>
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TreeView}}}"/>
                    <Setter Property="materialDesign:TreeViewAssist.ExpanderSize" Value="16"/>
                    <Setter Property="materialDesign:TreeViewAssist.ShowSelection" Value="False"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="16"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualStateGroup.Transitions>
                                                <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" Storyboard="{x:Null}" To="Normal">
                                                    <VisualTransition.GeneratedEasingFunction>
                                                        <CubicEase EasingMode="EaseOut"/>
                                                    </VisualTransition.GeneratedEasingFunction>
                                                </VisualTransition>
                                            </VisualStateGroup.Transitions>
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                                    <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="SelectionStates">
                                            <VisualStateGroup.Transitions>
                                                <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.6" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                            </VisualStateGroup.Transitions>
                                            <VisualState x:Name="Selected">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="0.18" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unselected"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="ExpansionStates">
                                            <VisualStateGroup.Transitions>
                                                <VisualTransition From="{x:Null}" GeneratedDuration="0" To="Expanded">
                                                    <VisualTransition.GeneratedEasingFunction>
                                                        <CubicEase EasingMode="EaseOut"/>
                                                    </VisualTransition.GeneratedEasingFunction>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <Visibility>Visible</Visibility>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"/>
                                                        <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost"/>
                                                    </Storyboard>
                                                </VisualTransition>
                                                <VisualTransition From="{x:Null}" GeneratedDuration="0" To="Collapsed">
                                                    <VisualTransition.GeneratedEasingFunction>
                                                        <CubicEase EasingMode="EaseOut"/>
                                                    </VisualTransition.GeneratedEasingFunction>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <Visibility>Collapsed</Visibility>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"/>
                                                        <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost"/>
                                                    </Storyboard>
                                                </VisualTransition>
                                            </VisualStateGroup.Transitions>
                                            <VisualState x:Name="Expanded">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"/>
                                                    <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost"/>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Collapsed">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"/>
                                                    <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost"/>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Collapsed</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <materialDesign:ScaleHost  x:Name="ScaleHost" />
                                    <ToggleButton x:Name="Expander" ClickMode="Press" Foreground="{TemplateBinding Foreground}" Height="{TemplateBinding materialDesign:TreeViewAssist.ExpanderSize}" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Margin="0" VerticalAlignment="Center" Width="{TemplateBinding materialDesign:TreeViewAssist.ExpanderSize}">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="Width" Value="16"/>
                                                <Setter Property="Height" Value="16"/>
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <Border Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CheckStates">
                                                                        <VisualStateGroup.Transitions>
                                                                            <VisualTransition From="Unchecked" GeneratedDuration="0" To="Checked">
                                                                                <VisualTransition.GeneratedEasingFunction>
                                                                                    <QuarticEase EasingMode="EaseOut"/>
                                                                                </VisualTransition.GeneratedEasingFunction>
                                                                                <Storyboard>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="45"/>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualTransition>
                                                                            <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Unchecked">
                                                                                <Storyboard>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="45"/>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualTransition>
                                                                            <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Checked">
                                                                                <Storyboard>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualTransition>
                                                                            <VisualTransition From="Checked" GeneratedDuration="0" To="Unchecked">
                                                                                <VisualTransition.GeneratedEasingFunction>
                                                                                    <QuarticEase EasingMode="EaseOut"/>
                                                                                </VisualTransition.GeneratedEasingFunction>
                                                                                <Storyboard>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="45"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualTransition>
                                                                        </VisualStateGroup.Transitions>
                                                                        <VisualState x:Name="Checked">
                                                                            <Storyboard>
                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="45"/>
                                                                                </DoubleAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Unchecked">
                                                                            <Storyboard>
                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                </DoubleAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <Viewbox>
                                                                    <Canvas Height="24" Width="24">
                                                                        <Path x:Name="ExpandPath" Data="M8.59,16.58L13.17,12 8.59,7.41 10,6 16,12 10,18 8.59,16.58z" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True" Stroke="{TemplateBinding Foreground}">
                                                                            <Path.RenderTransform>
                                                                                <TransformGroup>
                                                                                    <ScaleTransform/>
                                                                                    <SkewTransform/>
                                                                                    <RotateTransform Angle="0" CenterY="4" CenterX="4"/>
                                                                                    <TranslateTransform/>
                                                                                </TransformGroup>
                                                                            </Path.RenderTransform>
                                                                        </Path>
                                                                    </Canvas>
                                                                </Viewbox>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <Border x:Name="MouseOverBorder" Grid.ColumnSpan="2" Grid.Column="1" IsHitTestVisible="False" Opacity="0">
                                        <Border.Background>
                                            <TemplateBinding Property="Foreground">
                                                <TemplateBinding.Converter>
                                                    <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                </TemplateBinding.Converter>
                                            </TemplateBinding>
                                        </Border.Background>
                                    </Border>
                                    <Border x:Name="SelectedBorder" Grid.ColumnSpan="2" Grid.Column="1" IsHitTestVisible="False" Opacity="0">
                                        <Border.Background>
                                            <TemplateBinding Property="Foreground">
                                                <TemplateBinding.Converter>
                                                    <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                </TemplateBinding.Converter>
                                            </TemplateBinding>
                                        </Border.Background>
                                    </Border>
                                    <Grid x:Name="ContentGrid" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.Column="1">
                                        <materialDesign:Ripple x:Name="Ripple" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <materialDesign:Ripple.Feedback>
                                                <TemplateBinding Property="Foreground">
                                                    <TemplateBinding.Converter>
                                                        <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                    </TemplateBinding.Converter>
                                                </TemplateBinding>
                                            </materialDesign:Ripple.Feedback>
                                            <ContentPresenter x:Name="PART_Header"  Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" ContentTemplate="{TemplateBinding HeaderTemplate}"/>
                                        </materialDesign:Ripple>
                                    </Grid>
                                    <ContentControl x:Name="AdditionalContentControl" Grid.ColumnSpan="2" ContentTemplate="{Binding (materialDesign:TreeViewAssist.AdditionalTemplate), RelativeSource={RelativeSource Self}}" Content="{TemplateBinding Header}" Grid.Column="1" Grid.Row="1" Visibility="Collapsed"/>
                                    <StackPanel x:Name="ItemsPanel" Grid.ColumnSpan="2" Grid.Column="1" Margin="-8,0,0,0" Grid.Row="2">
                                        <StackPanel.Height>
                                            <MultiBinding UpdateSourceTrigger="Default">
                                                <MultiBinding.Converter>
                                                    <materialDesign:MathMultipleConverter Operation="Multiply"/>
                                                </MultiBinding.Converter>
                                                <Binding ElementName="ItemsHost" Path="ActualHeight"/>
                                                <Binding ElementName="ScaleHost" Path="Scale"/>
                                            </MultiBinding>
                                        </StackPanel.Height>
                                        <ItemsPresenter x:Name="ItemsHost" Opacity="0" Visibility="Collapsed" VerticalAlignment="Top"/>
                                    </StackPanel>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Value="Visible">
                                        <DataTrigger.Binding>
                                            <Binding Mode="OneWay" Path="(materialDesign:TreeViewAssist.AdditionalTemplate)" RelativeSource="{RelativeSource Self}">
                                                <Binding.Converter>
                                                    <materialDesign:NullableToVisibilityConverter NullValue="Collapsed" NotNullValue="Visible"/>
                                                </Binding.Converter>
                                            </Binding>
                                        </DataTrigger.Binding>
                                        <Setter Property="Visibility" TargetName="AdditionalContentControl" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Value="Visible">
                                        <DataTrigger.Binding>
                                            <Binding Mode="OneWay" Path="(materialDesign:TreeViewAssist.AdditionalTemplateSelector)" RelativeSource="{RelativeSource Self}">
                                                <Binding.Converter>
                                                    <materialDesign:NullableToVisibilityConverter NullValue="Collapsed" NotNullValue="Visible"/>
                                                </Binding.Converter>
                                            </Binding>
                                        </DataTrigger.Binding>
                                        <Setter Property="Visibility" TargetName="AdditionalContentControl" Value="Visible"/>
                                    </DataTrigger>
                                    <Trigger Property="HasItems" Value="False">
                                        <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.56"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding (materialDesign:TreeViewAssist.ShowSelection), RelativeSource={RelativeSource Self}}" Value="False">
                                        <Setter Property="Visibility" TargetName="MouseOverBorder" Value="Collapsed"/>
                                        <!--Setter Property="Visibility" TargetName="SelectedBorder" Value="Collapsed"/-->
                                        <Setter Property="Feedback" TargetName="Ripple" Value="Transparent"/>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                            <Setter Property="ItemsPanel">
                                <Setter.Value>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel IsItemsHost="True"/>
                                    </ItemsPanelTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                  
            </TreeView.Resources>
        </TreeView>

    </Grid>
</UserControl>
