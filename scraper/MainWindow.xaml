<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:scraper"
        xmlns:View="clr-namespace:scraper.View"
        xmlns:A="clr-namespace:scraper.Attached"
        xmlns:common="clr-namespace:Mi.Common"
                 xmlns:TemplateSelectors="clr-namespace:scraper.View.TemplateSelectors"

        xmlns:custom="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:ViewModel="clr-namespace:scraper.ViewModel" xmlns:Converters="clr-namespace:Converters" x:Class="scraper.MainWindow"
        xmlns:catPickerView="clr-namespace:scraper.View.CategoryPicker"
    xmlns:catPickerViewModel="clr-namespace:scraper.ViewModel.CategoryPicker"
    xmlns:catPickerModel="clr-namespace:scraper.Model.CategoryPicker"
        mc:Ignorable="d"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Display" 
        TextOptions.TextRenderingMode="Auto"
        FontFamily="Roboto" Height="499" Width="795.55" UseLayoutRounding="True" ResizeMode="CanResizeWithGrip" Background="{x:Null}"
    d:DataContext="{d:DesignData /SampleData/MainViewModelSampleData.xaml}" Icon="scraper.ico" Title="{Binding WindowTitle}"
        
        
        
        >
    <Window.Resources>
        <Converters:LargeNumberFormatter x:Key="LargeNumberFormatter"/>
        <Converters:VisibleIfNonNullOrEmptyString x:Key="VisibleIfNonNullOrEmptyString"/>
        <materialDesign:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Converters:VisibleIfEnumValueMatchesStringParam x:Key="VisibleIfEnumValueMatchesStringParam"/>
        <Converters:IntToVisibilityConverter x:Key="IntToVisibilityConverter"/>
        <Converters:BooleanToVisibilityInverted x:Key="BooleanToVisibilityInverted"/>
        <common:ApplicationInfo x:Key="ApplicationInfo"/>

        <DataTemplate DataType="{x:Type ViewModel:HelpVM}">
            <Grid>
                <View:HelpView DataContext="{Binding}"/>
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type catPickerViewModel:CategoryPickerVM}">
            <Grid>
                <catPickerView:CategoryPickerView DataContext="{Binding}"/>
            </Grid>
        </DataTemplate>

        <Style x:Key="BasicListViewItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ContentPresenter  />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="materialDesign:ListBoxItemAssist.ShowSelection" Value="{Binding (materialDesign:ListBoxItemAssist.ShowSelection), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ListBox}}}"/>
            <Setter Property="IsSelected" Value="{Binding IsActive, Mode=TwoWay}"/>
            <Setter Property="IsEnabled" Value="{Binding IsEnabled, Mode=OneWay}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" ClipToBounds="{TemplateBinding ClipToBounds}" Margin="{TemplateBinding Margin}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.1" To="Normal">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.2" GeneratedEasingFunction="{x:Null}" To="{x:Null}"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <!--DoubleAnimation Duration="0" To="0.18" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/-->
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unselected">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="packIconMaterial">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.95"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <!--DoubleAnimation Duration="0" To="0.18" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/-->
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="grid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="27"/>
                                </Grid.ColumnDefinitions>
                                <Border x:Name="MouseOverBorder" Opacity="0" Grid.ColumnSpan="2">
                                    <Border.Background>
                                        <TemplateBinding Property="Foreground">
                                            <TemplateBinding.Converter>
                                                <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                            </TemplateBinding.Converter>
                                        </TemplateBinding>
                                    </Border.Background>
                                </Border>
                                <Border x:Name="SelectedBorder" Opacity="0" Grid.ColumnSpan="2">
                                    <Border.Background>
                                        <TemplateBinding Property="Foreground">
                                            <TemplateBinding.Converter>
                                                <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                            </TemplateBinding.Converter>
                                        </TemplateBinding>
                                    </Border.Background>
                                </Border>
                                <materialDesign:Ripple x:Name="Ripple" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Grid.ColumnSpan="1">
                                    <materialDesign:Ripple.Feedback>
                                        <TemplateBinding Property="Foreground">
                                            <TemplateBinding.Converter>
                                                <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                            </TemplateBinding.Converter>
                                        </TemplateBinding>
                                    </materialDesign:Ripple.Feedback>
                                </materialDesign:Ripple>
                                <custom:PackIconMaterial x:Name="packIconMaterial" Kind="Check" Height="14" Width="14" Foreground="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.56"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding (materialDesign:ListBoxItemAssist.ShowSelection), RelativeSource={RelativeSource Self}}" Value="False">
                                <Setter Property="Visibility" TargetName="MouseOverBorder" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="SelectedBorder" Value="Collapsed"/>
                                <Setter Property="Feedback" TargetName="Ripple" Value="Transparent"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ItemsPanelTemplate x:Key="ScrapingTaskListBoxItemsPanelStyle">
            <WrapPanel IsItemsHost="True"/>
        </ItemsPanelTemplate>
        <DataTemplate x:Key="ScrapingTasksListBoxItemTemplate">
            <Grid d:DesignWidth="265" d:DesignHeight="152">
                <View:ScrapingActionCardView/>
            </Grid>
        </DataTemplate>
        <Style x:Key="ScrapingTasksListBoxItemContainerTemplate" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="materialDesign:ListBoxItemAssist.ShowSelection" Value="{Binding (materialDesign:ListBoxItemAssist.ShowSelection), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ListBox}}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" ClipToBounds="{TemplateBinding ClipToBounds}" Margin="{TemplateBinding Margin}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" Storyboard="{x:Null}" To="Normal">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>

                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.6" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                    </VisualStateGroup.Transitions>

                                    <VisualState x:Name="Unselected"/>

                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.56"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding (materialDesign:ListBoxItemAssist.ShowSelection), RelativeSource={RelativeSource Self}}" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListBoxItemStyle2" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="materialDesign:ListBoxItemAssist.ShowSelection" Value="{Binding (materialDesign:ListBoxItemAssist.ShowSelection), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ListBox}}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" ClipToBounds="{TemplateBinding ClipToBounds}" Margin="{TemplateBinding Margin}">
                            <Grid>
                                <materialDesign:Ripple x:Name="Ripple" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <materialDesign:Ripple.Feedback>
                                        <TemplateBinding Property="Foreground">
                                            <TemplateBinding.Converter>
                                                <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                            </TemplateBinding.Converter>
                                        </TemplateBinding>
                                    </materialDesign:Ripple.Feedback>
                                </materialDesign:Ripple>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.56"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding (materialDesign:ListBoxItemAssist.ShowSelection), RelativeSource={RelativeSource Self}}" Value="False">
                                <Setter Property="Feedback" TargetName="Ripple" Value="Transparent"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ViewHeaderStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="FontFamily" Value="Fonts/#Poppins Light"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style x:Key="DataGridCellStyle1" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true"/>
                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TextBlockStyle1" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="2,0"/>
        </Style>
        <DataTemplate x:Key="FilterRulesListBoxItemTemplate">
            <Grid Margin="4">
                <materialDesign:Chip Content="{Binding Caption}" IsDeletable="True" DeleteCommand="{Binding DeleteCommand}"/>
            </Grid>
        </DataTemplate>
        <ItemsPanelTemplate x:Key="FilterRulesListboxItemsPanelTemplate">
            <WrapPanel IsItemsHost="True"/>
        </ItemsPanelTemplate>
        <DataTemplate x:Key="RecentWorkspaceItemTemlate">
            <Grid x:Name="igrd" d:DesignWidth="476" d:DesignHeight="135.5" VerticalAlignment="Top" Height="32" Background="#00000000">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Button Command="{Binding OpenCommand}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,8,0" BorderThickness="0" Padding="2" Background="#00000000">
                    <TextBlock  x:Name="textBlock" TextWrapping="Wrap"  Foreground="#FF50A3F5"   >
                        <TextBlock.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Open" Command="{Binding OpenCommand}"  UseLayoutRounding="True" />
                                <MenuItem Command="{Binding PinToggleCommand}" Header="Pin to this list" />
                                <MenuItem Command="{Binding RemoveCommand}" Header="Remove from this list" />
                            </ContextMenu>
                        </TextBlock.ContextMenu><Run x:Name="r1" Text="{Binding Name}"/><Run Text=" "/><Run Foreground="{StaticResource MaterialDesignBodyLight}" Text="{Binding TotalSize}"/></TextBlock>

                </Button>
                <custom:PackIconMaterial Kind="Pin" Width="14" Height="14" Visibility="{Binding IsPinned, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
            </Grid>
        </DataTemplate>
        <ItemsPanelTemplate x:Key="RecentsWorkspacesItemsPanelTemplate">
            <StackPanel IsItemsHost="True"/>
        </ItemsPanelTemplate>
        <DataTemplate x:Key="PluginsPickerComboBoxItemTemplate">
            <Grid>
                <TextBlock  ><Run Text="{Binding Name, Mode=OneWay}"/><Run Text=" "/><Run Foreground="{StaticResource MaterialDesignBodyLight}"  Text="{Binding Version, Mode=OneWay, StringFormat=(\{0\})}"/></TextBlock>
            </Grid>
        </DataTemplate>
    </Window.Resources>
    <TextElement.Foreground>
        <StaticResource ResourceKey="MaterialDesignBody"/>
    </TextElement.Foreground>
    <Window.InputBindings>
        <KeyBinding CommandParameter="9" Command="{Binding DevFillAndStartCommand}" Modifiers="Ctrl" Key="NumPad9"/>
        <KeyBinding CommandParameter="d" Command="{Binding DevGPCommand}" Modifiers="Ctrl" Key="D"/>

        <KeyBinding CommandParameter="4" Command="{Binding DevFillAndStartCommand}" Modifiers="Ctrl" Key="NumPad4"/>
    </Window.InputBindings>
    <WindowChrome.WindowChrome>
        <WindowChrome   GlassFrameThickness="0"  CornerRadius="0" CaptionHeight="0" 
            UseAeroCaptionButtons="False" ResizeBorderThickness="4" />
    </WindowChrome.WindowChrome>
    <Grid MouseDown="Grid_MouseDown" Background="{StaticResource MaterialDesignPaper}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="146*"/>
            <ColumnDefinition Width="29*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="24"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <TabControl Style="{StaticResource MaterialDesignNavigatilRailTabControl}" 
			Visibility="{Binding IsWorkspaceSetupMode, Converter={StaticResource BooleanToVisibilityInverted}}"
			materialDesign:NavigationRailAssist.CornerRadius="8" 
			materialDesign:ColorZoneAssist.Mode="Custom"
			materialDesign:ColorZoneAssist.Background="#FF1c1c1c"
			materialDesign:ColorZoneAssist.Foreground="#ffffffff"
			BorderThickness="0" Margin="0" Grid.ColumnSpan="2" FontFamily="Roboto" BorderBrush="#008C8E94" Grid.RowSpan="2" SelectedIndex="{Binding SelectedAppTabIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  >
            <TabItem x:Name="overview"  
					
				Style="{StaticResource MaterialDesignNavigationRailTabItem}" Height="64" FontFamily="Roboto" Width="64">
                <TabItem.Header >
                    <Grid HorizontalAlignment="Center" ToolTip="View products">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="32"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <custom:PackIconMaterial Grid.Row="0" Kind="FileCad" Width="16" Height="16" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Roboto" Foreground="White" Margin="0,8"/>
                        <TextBlock Grid.Row="1" HorizontalAlignment="Center" FontSize="12" Visibility="Collapsed" FontFamily="Roboto" ><Run Text="Products"/></TextBlock>
                    </Grid>
                </TabItem.Header>
                <Grid x:Name="content" Margin="0,0,0,2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="173*" MaxWidth="250" MinWidth="212"/>
                        <ColumnDefinition Width="264*"/>
                        <ColumnDefinition Width="196"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="48"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid x:Name="dragging_area_middle" Margin="0" Background="#00E41F1F" MouseDown="Grid_MouseDown_1" Height="48" VerticalAlignment="Top" Grid.ColumnSpan="3" PreviewMouseLeftButtonDown="dragging_area_PreviewMouseLeftButtonDown" Grid.Column="1"/>
                    <Grid x:Name="controlPanel" Margin="0,0,4,0" Grid.RowSpan="3" Background="#FF232323">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="48"/>
                            <RowDefinition Height="48"/>
                            <RowDefinition Height="*"/>

                        </Grid.RowDefinitions>
                        <Grid x:Name="head" Margin="4,14,0,14" VerticalAlignment="Center">
                            <TextBlock x:Name="head_string" HorizontalAlignment="Left" Margin="2,0,0,0"  Text="{Binding ElementNamePlural, FallbackValue=View Elements, Mode=OneWay, StringFormat=View \{0\}}" VerticalAlignment="Center"  TextOptions.TextFormattingMode="Ideal" Style="{DynamicResource ViewHeaderStyle}"/>
                        </Grid>
                        <Grid x:Name="searchSection" Grid.Row="1" Margin="4,0,0,0">
                            <TextBox x:Name="search_tb"
								materialDesign:ColorZoneAssist.Mode="Dark"
								materialDesign:TextFieldAssist.LeadingIcon="Search"
								materialDesign:TextFieldAssist.HasLeadingIcon="True"
								materialDesign:TextFieldAssist.HasClearButton="True"
								materialDesign:TextFieldAssist.LeadingIconSize="16"
								materialDesign:TextFieldAssist.TextBoxViewMargin="4 0 2 0"
								materialDesign:HintAssist.Hint="Search"
                                    
								materialDesign:TextFieldAssist.UnderlineBrush="White"
								FontSize="16" FontFamily="Roboto" Foreground="White" VerticalAlignment="Center" Margin="0,0,4,0" IsTabStop="False" Text="{Binding SearchQuery, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>
                        <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto">
                            <StackPanel VerticalAlignment="Top">

                                <ItemsControl ItemsSource="{Binding FilterComponenetsVMS}" d:LayoutOverrides="LeftPosition, RightPosition" AlternationCount="{Binding Items.Count, RelativeSource={RelativeSource Self}}">
                                    <ItemsControl.Resources>
                                        <DataTemplate DataType="{x:Type ViewModel:GroupsFilterComponentViewModel}">
                                            <StackPanel>
                                                <Grid Height="1" x:Name="sepGrd" Background="{StaticResource MaterialDesignDivider}" />
                                                <View:GroupFilterComponentView DataContext="{Binding}" />
                                            </StackPanel>
                                            <DataTemplate.Triggers>
                                                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                                    <Setter TargetName="sepGrd" Property="Visibility" Value="Collapsed"/>
                                                </Trigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                        <DataTemplate DataType="{x:Type ViewModel:RangeFilterComponentViewModel}">
                                            <StackPanel>
                                                <Grid Height="1" x:Name="sepGrd" Background="{StaticResource MaterialDesignDivider}" />
                                                <View:RangeFilterComponentView DataContext="{Binding}" />
                                            </StackPanel>
                                            <DataTemplate.Triggers>
                                                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                                    <Setter TargetName="sepGrd" Property="Visibility" Value="Collapsed"/>
                                                </Trigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </ItemsControl.Resources>
                                </ItemsControl>
                                <Grid Height="1"  Background="{StaticResource MaterialDesignDivider}" />

                                <Expander HorizontalAlignment="Stretch" Header="Filter" Background="#00571919" IsExpanded="True">
                                    <materialDesign:DialogHost materialDesign:TransitionAssist.DisableTransitions="True"  IsOpen="{Binding IsCreatingFilterRuleDlgOpen}" CloseOnClickAway="True"
                        				OverlayBackground="#00000000"
                        				DialogTheme="Inherit" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                                        <materialDesign:DialogHost.DialogContent>
                                            <Grid Background="{StaticResource MaterialDesignPaper}" Width="220">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"  />
                                                    <RowDefinition Height="auto"  />
                                                    <RowDefinition Height="auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid >
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition  Width="*"/>
                                                        <ColumnDefinition  Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <ComboBox SelectedItem="{Binding CurrentFilteringRuleFiedlInput}" ItemsSource="{Binding ElementFields}" MinWidth="80" Margin="6" SelectedIndex="0" >
                                                        <ComboBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <TextBlock Text="{Binding UIName}"/>
                                                            </DataTemplate>
                                                        </ComboBox.ItemTemplate>
                                                    </ComboBox>
                                                    <ComboBox SelectedItem="{Binding CurrentFilteringRuleTypeInput}" Margin="10,0" Grid.Column="1" SelectedIndex="0" ItemsSource="{Binding FilterRuleTypesNames}"/>

                                                </Grid>
                                                <TextBox Text="{Binding CurrentFilteringRuleParamInput, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" materialDesign:HintAssist.Hint="Parameter" Margin="12,4" VerticalAlignment="Center" Grid.Row="1" Visibility="{Binding IsCurrentFilteringRuleParamInputVisible, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"/>
                                                <StackPanel  Grid.Row="2"  Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,2,2">

                                                    <Button  Style="{StaticResource MaterialDesignFlatDarkBgButton}" VerticalAlignment="Center" Margin="6" Command="{Binding CancelCreatingFilterRuleDlgCommand, Mode=OneWay}" Content="Cancel"/>
                                                    <Button Style="{StaticResource MaterialDesignFlatDarkBgButton}" VerticalAlignment="Center" Margin="6" Command="{Binding AddFilterRuleCommand, Mode=OneWay}" Content="OK"/>

                                                </StackPanel>

                                            </Grid>
                                        </materialDesign:DialogHost.DialogContent>
                                        <Grid Margin="4">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>

                                            </Grid.RowDefinitions>
                                            <Button Command="{Binding ShowCreatingFilterRuleDlgCommand}"
                        						Style="{StaticResource MaterialDesignIconForegroundButton}"
                        						ToolTip="Add a filtering rule" HorizontalAlignment="Left" Width="28" Height="28" Margin="4,0">
                                                <custom:PackIconMaterial Kind="FilterPlus"  HorizontalAlignment="Center" VerticalAlignment="Center" Width="16" Height="16"/>
                                            </Button>
                                            <ListBox  ItemsSource="{Binding FilterRulesVMS}" ItemTemplate="{DynamicResource FilterRulesListBoxItemTemplate}" ItemsPanel="{DynamicResource FilterRulesListboxItemsPanelTemplate}" ItemContainerStyle="{StaticResource BasicListViewItemStyle}" Grid.Row="1" />
                                        </Grid>
                                    </materialDesign:DialogHost>

                                </Expander>
                                <Grid Height="1"  Background="{StaticResource MaterialDesignDivider}" Visibility="Collapsed" />
                                <Expander
                        			HorizontalAlignment="Stretch"
                        			Header="Year" Background="#00763838" Visibility="Collapsed">
                                </Expander>

                            </StackPanel>

                        </ScrollViewer>
                    </Grid>
                    <Grid x:Name="sidePanel" Grid.Column="2" Margin="4" Grid.RowSpan="2" Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <materialDesign:Card materialDesign:ShadowAssist.ShadowDepth="Depth0" Padding="4"
							Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
							UniformCornerRadius="10" FontFamily="Roboto" Background="#FF252525" Margin="0,2,0,4" MaxHeight="350">
                            <Grid Margin="0,0,0,2">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="48"/>
                                    <RowDefinition Height="48"/>
                                </Grid.RowDefinitions>
                                <StackPanel Orientation="Vertical" VerticalAlignment="Top">
                                    <Border Margin="6,4" Background="{StaticResource MaterialDesignPaper}" CornerRadius="8" Padding="6">

                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="20"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <TextBlock FontFamily="Roboto" FontWeight="Bold" Text="{Binding CurrentPluginTargetHost}" FontSize="12" HorizontalAlignment="Left" VerticalAlignment="Center" TextOptions.TextFormattingMode="Display"/>
                                            <StackPanel Margin="0,1,0,0" Orientation="Vertical" Grid.Row="1">
                                                <Grid Height="27" Margin="0">
                                                    <TextBlock  Foreground="{StaticResource MaterialDesignBodyLight}" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="13.333" FontFamily="Roboto" TextOptions.TextFormattingMode="Display" Margin="0" Text="{Binding ElementNamePlural}"/>
                                                    <TextBlock  VerticalAlignment="Center" HorizontalAlignment="Right" Foreground="{DynamicResource AppImportantDataColor}" FontSize="14.667" FontFamily="Consolas" TextOptions.TextFormattingMode="Display" Margin="0,0.018,-0.28,-0.019" FontWeight="Bold" Text="{Binding TotalRecordsCountString}"/>
                                                </Grid>
                                                <Grid Visibility="Collapsed" Height="27" Margin="0">
                                                    <TextBlock  Foreground="{StaticResource MaterialDesignBodyLight}" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="13.333" FontFamily="Roboto" TextOptions.TextFormattingMode="Display" Margin="0" Text="locations"/>
                                                    <TextBlock  VerticalAlignment="Center" HorizontalAlignment="Right" Foreground="{DynamicResource AppImportantDataColor}" FontSize="14.667" FontFamily="Consolas" TextOptions.TextFormattingMode="Display" Margin="0,0.018,-0.28,-0.019" Text="-" FontWeight="Bold"/>
                                                </Grid>
                                            </StackPanel>
                                        </Grid>
                                    </Border>


                                </StackPanel>
                                <Button x:Name="saveResultsButt" Style="{StaticResource MaterialDesignFlatDarkBgButton}"  Height="Auto" Margin="10,0" Grid.Row="1" VerticalAlignment="Center" Padding="10,8" ToolTip="Save the elements of the grid into a new file" Command="{Binding SaveResultsCommand, Mode=OneWay}">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock VerticalAlignment="Center" Text="{Binding ElementsViewModels.Count, FallbackValue=SAVE RESULTS, Mode=OneWay, StringFormat=SAVE RESULTS (\{0\})}" />
                                        <Image Source="media/img/svg-22-white-regular.png" Width="22" Height="22" VerticalAlignment="Center" Margin="4,0,0,0" Visibility="Collapsed" />
                                    </StackPanel>
                                </Button>
                                <Button x:Name="saveSelection" Style="{StaticResource MaterialDesignFlatDarkBgButton}"  Height="Auto" Margin="10,0" Grid.Row="2" VerticalAlignment="Center" Padding="10,8" ToolTip="Save the selected elements of the grid into a new file" Command="{Binding SaveSelectionCommand, Mode=OneWay}">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock VerticalAlignment="Center" Text="{Binding SelectionCount, FallbackValue=SAVE SELECTION, StringFormat=SAVE SELECTION (\{0\})}" />
                                    </StackPanel>
                                </Button>



                            </Grid>


                        </materialDesign:Card>

                    </Grid>
                    <Grid x:Name="mainPanel" Margin="4" Grid.RowSpan="3" Grid.Column="1" Panel.ZIndex="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock x:Name="no_items_notice" HorizontalAlignment="Center" Margin="2,20,0,6" TextWrapping="Wrap" VerticalAlignment="Center" Text="{Binding ElementNamePlural, FallbackValue=(there are no elements to show), Mode=OneWay, StringFormat=(there are no \{0\} to show)}" Visibility="{Binding Items.Count, Converter={StaticResource BooleanToVisibilityInverted}, ElementName=listBox, Mode=OneWay}" Grid.RowSpan="2"/>
                        <Grid x:Name="ResultsControlSection" Height="28" Background="#00000000" MouseLeftButtonDown="ResultsControlSection_MouseLeftButtonDown">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="28"/>
                                <ColumnDefinition Width="28"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ComboBox x:Name="sorting_cb" 
								materialDesign:HintAssist.Hint="Sort by" FontFamily="Roboto" Grid.Column="3" Margin="8,2,0,2" Panel.ZIndex="3" Visibility="Collapsed">
                                <ComboBoxItem Content="Date newer to older" />
                                <ComboBoxItem Content="Date older to newer" />

                                <ComboBoxItem Content="Rank low to high" />
                                <ComboBoxItem Content="Rank high to low" />
                                <ComboBoxItem Content="Price lower to higher" />
                                <ComboBoxItem Content="Price higher to lower" />
                                <ComboBoxItem Content="Category A - Z " />
                                <ComboBoxItem Content="Category Z - A " />
                                <ComboBoxItem Content="Tile A - Z " />
                                <ComboBoxItem Content="Tile Z - A " />
                            </ComboBox>
                            <Button
								Style="{StaticResource MaterialDesignIconForegroundButton}"
								ToolTip="save results to a svc ile" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" Width="28" Height="28" Visibility="Collapsed">
                                <Image Source="media/img/save-16-white.png" HorizontalAlignment="Center" VerticalAlignment="Center" Width="16" Height="16"/>
                            </Button>
                            <TextBlock x:Name="textBlock" HorizontalAlignment="Left" Margin="2,0,0,0" TextWrapping="Wrap" Text="{Binding ElementsViewModels.Count, Mode=OneWay, StringFormat=\{0\} Items}" VerticalAlignment="Center" Visibility="{Binding ElementsViewModels.Count, Converter={StaticResource IntToVisibilityConverter}, Mode=OneWay}"/>
                            <Button Command="{Binding SwitchElementsViewType}"
								Style="{StaticResource MaterialDesignIconForegroundButton}"
								ToolTip="Grid view/List view" HorizontalAlignment="Center" VerticalAlignment="Center" Width="28" Height="28" Grid.Column="2">
                                <Image Source="media/img/cards-view-16-white.png" HorizontalAlignment="Center" VerticalAlignment="Center" Width="16" Height="16"/>
                            </Button>
                        </Grid>
                        <Grid x:Name="contentSection" Grid.Row="1" Margin="0,6,0,0" >
                            <DataGrid x:Name="elementsDatagrid" A:DataGridAttachedProperties.ColumnsMi="{Binding ElementFields}"  IsReadOnly="True" AutoGenerateColumns="False"  ItemsSource="{Binding ElementsViewModels}" Visibility="{Binding ElementsViewType, ConverterParameter=Grid, Converter={StaticResource VisibleIfEnumValueMatchesStringParam}}" AlternationCount="2" CanUserDeleteRows="False" CopyingRowClipboardContent="DataGrid_CopyingRowClipboardContent" SelectionChanged="elementsDatagrid_SelectionChanged">
                                <DataGrid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Command="Copy" />
                                    </ContextMenu>
                                </DataGrid.ContextMenu>

                            </DataGrid>
                            <ListBox  x:Name="listBox" VirtualizingPanel.IsVirtualizing="True" Margin="2,0" VirtualizingPanel.VirtualizationMode="Recycling" ItemsSource="{Binding ElementsViewModels}" HorizontalContentAlignment="Stretch" Visibility="{Binding ElementsViewType, ConverterParameter=List, Converter={StaticResource VisibleIfEnumValueMatchesStringParam}}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <View:ProductCardView HorizontalAlignment="Stretch" DataContext="{Binding}" />
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                    </Grid>
                    <Grid x:Name="dragging_area_right" Margin="0" Background="#00E41F1F" Height="48" VerticalAlignment="Top" MouseLeftButtonDown="dragging_area_right_MouseLeftButtonDown"/>

                </Grid>
            </TabItem>
            <TabItem x:Name="database"  
				Style="{StaticResource MaterialDesignNavigationRailTabItem}" Width="64" FontFamily="Roboto" Height="64">
                <TabItem.Header>
                    <materialDesign:Badged HorizontalAlignment="Stretch" BadgeColorZoneMode="Inverted" VerticalAlignment="Stretch" Height="32" Width="32" materialDesign:BadgedAssist.IsMiniBadge="True" ToolTip="Scrap products">
                        <materialDesign:Badged.Badge  >
                            <Border CornerRadius="4 4 4 4" Height="16" Padding="2,0">
                                <TextBlock  HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="9.333" Text="{Binding TotalRecordsCountString}" FontWeight="Bold"/>
                            </Border>
                        </materialDesign:Badged.Badge>


                        <Grid Width="32" Height="32">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <custom:PackIconMaterial Grid.Row="0" Kind="Factory" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                            <TextBlock Grid.Row="1" HorizontalAlignment="Center" FontSize="12" FontFamily="Roboto" Visibility="Collapsed" ><Run Text="Database"/></TextBlock>
                        </Grid>
                    </materialDesign:Badged>
                </TabItem.Header>
                <Grid>
                    <materialDesign:DialogHost DialogContent="{Binding CurrentDialogContent}"
						IsOpen="{Binding IsPopupOpen}"
  
						CloseOnClickAway="True"
						OverlayBackground="#00000000"
						DialogTheme="Inherit" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                        <!--materialDesign:DialogHost.DialogContent>
                        replaced with auto type template in mw resocureces
                            <Grid>
                                <View:HelpView DataContext="{Binding PluginHelpVM}"/>
                            </Grid>
                        </-->
                        
                        
                        <Grid x:Name="content_database" Margin="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="329*"/>
                                <ColumnDefinition Width="254*"/>
                                <ColumnDefinition Width="254*"/>
                                <ColumnDefinition Width="254*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="48"/>
                                <RowDefinition Height="88"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="161"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="dragging_area_middle_Copy" Margin="234,0,0,0" Background="#00E41F1F" MouseDown="Grid_MouseDown_1" Height="48" VerticalAlignment="Top" Grid.ColumnSpan="4" PreviewMouseLeftButtonDown="dragging_area_PreviewMouseLeftButtonDown"/>

                            <Grid x:Name="controlPanel1" Margin="0,0,4,0" Grid.RowSpan="4" Background="#FF232323">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="48"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="0"/>
                                </Grid.RowDefinitions>
                                <Button x:Name="add_csv_file"
									Style="{StaticResource MaterialDesignFloatingActionDarkButton}"
									ToolTip="MaterialDesignFloatingActionDarkButton" VerticalAlignment="Bottom" Margin="0,0,24,24" HorizontalAlignment="Right" Grid.Row="3" Command="{Binding LoadCSVFileCommand}" Width="48" Height="48" Visibility="Collapsed">
                                    <materialDesign:PackIcon
										Kind="Plus"
										Height="24"
										Width="24" />
                                </Button>
                                <Grid x:Name="header" Margin="4,14,0,14" VerticalAlignment="Center">
                                    <TextBlock x:Name="head_string1" HorizontalAlignment="Left" Margin="2,0,0,0"  Text="{Binding ElementNamePlural, FallbackValue=Scrap Elements, Mode=OneWay, StringFormat=Scrap \{0\}}" VerticalAlignment="Center" Style="{DynamicResource ViewHeaderStyle}" TextOptions.TextFormattingMode="Ideal"/>
                                </Grid>
                                <Grid x:Name="workspace_info" Grid.Row="1" VerticalAlignment="Top" Height="24" Margin="0,0,0,6">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="24"/>
                                        <ColumnDefinition Width="24"/>
                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="refresh_button" Style="{StaticResource MaterialDesignIconForegroundButton}"  Grid.Column="2" Width="24" Height="24" Command="{Binding RefreshWorkspaceCommand}" ToolTip="Refresh" >
                                        <custom:PackIconMaterial Kind="Sync" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Button>
                                    <TextBlock  VerticalAlignment="Center" Text="{Binding CurrentWorkspaceName, Mode=OneWay, StringFormat=Workspace: \{0\}}" TextTrimming="CharacterEllipsis"  Foreground="{StaticResource MaterialDesignBodyLight}" Margin="6,0,0,0" ToolTip="{Binding CurrentWorkspaceDirectory, Mode=OneWay, StringFormat=location: \{0\}}" FontSize="10.667" />
                                </Grid>
                                <ListBox x:Name="csvResourcesLB" materialDesign:ListBoxAssist.IsToggle="True" materialDesign:TransitionAssist.DisableTransitions="True"  materialDesign:RippleAssist.IsDisabled="True" Grid.Row="2" ItemsSource="{Binding CSVResourcesVMS}" AlternationCount="1" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Top" SelectionMode="Multiple" ItemContainerStyle="{DynamicResource ListBoxItemStyle1}" Grid.RowSpan="2">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate DataType="ViewModel:CSVResourceVM">
                                            <Grid x:Name="grd1" Height="24">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="VisualStateGroup">
                                                        <VisualStateGroup.Transitions>
                                                            <VisualTransition GeneratedDuration="0:0:0.2"/>
                                                        </VisualStateGroup.Transitions>
                                                        <VisualState  x:Name="Activated">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Deactivated">
                                                            
                                                        </VisualState>
                                                        <VisualState x:Name="ErrorState"/>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <i:Interaction.Triggers>
                                                    <ei:DataTrigger Binding="{Binding IsActive}" Value="True" >
                                                        <ei:GoToStateAction StateName="Activated" />
                                                    </ei:DataTrigger>
                                                    <ei:DataTrigger Binding="{Binding IsActive}" Value="False" >
                                                        <ei:GoToStateAction StateName="Deactivated" />
                                                    </ei:DataTrigger>
                                                </i:Interaction.Triggers>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="24"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="48"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock x:Name="head_string1e22" HorizontalAlignment="Left" Margin="2,0" TextWrapping="NoWrap" Text="{Binding FilenameOnly}" FontFamily="Roboto Light" VerticalAlignment="Center" FontSize="12" Grid.Column="1" ToolTip="{Binding FullPath}" TextTrimming="CharacterEllipsis" />
                                                <Border x:Name="border" Visibility="{Binding IsBadFormat, Converter={StaticResource BooleanToVisibilityInverted}}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" BorderBrush="{DynamicResource AppImportantDataColor}" BorderThickness="1" Grid.Column="2" Background="{DynamicResource AppImportantDataDarkeBackgroundColor}" CornerRadius="10" Opacity="0.3" >
                                                    <TextBlock x:Name="head_string1e_Copy22" TextWrapping="Wrap" Text="{Binding RowsCount, Converter={StaticResource LargeNumberFormatter}}" FontFamily="Roboto Light" FontSize="12" Foreground="{DynamicResource AppImportantDataColor}" Margin="6,2" HorizontalAlignment="Center" VerticalAlignment="Center" ToolTip="{Binding RowsCount}" />
                                                </Border>
                                                <Image x:Name="image" HorizontalAlignment="Center" Height="22" Margin="0" VerticalAlignment="Center" Width="22" Source="media/img/svg-22-white-regular.png"/>

                                                <Image x:Name="exclamation" Visibility="{Binding IsBadFormat, Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Center" Height="22" Margin="0" Grid.Column="2"  VerticalAlignment="Center" Width="10" Source="media/img/exclamation-10-fe0b0b.png"/>

                                            </Grid>
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="False">
                                                    <Setter  TargetName="grd1" Property="Opacity" Value="0.95" />
                                                </DataTrigger>

                                            </DataTemplate.Triggers>

                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>

                            </Grid>
                            <Grid x:Name="scraping_panel" Grid.Column="1" Margin="10,24,10,0" Grid.Row="0" Grid.ColumnSpan="3" VerticalAlignment="Center" Grid.RowSpan="2">
                                <materialDesign:Card Padding="4" materialDesign:ShadowAssist.ShadowDepth="Depth0"
									Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
									UniformCornerRadius="10" FontFamily="Roboto" Background="#001C1C1C" Margin="6,2,9,2" d:DataContext="{d:DesignInstance {x:Type ViewModel:MainViewModel}, IsDesignTimeCreatable=True}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="80"/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Grid x:Name="scrap_page_input" Margin="0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="24"/>
                                                <RowDefinition Height="48"/>
                                            </Grid.RowDefinitions>

                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="auto"/>
                                                </Grid.ColumnDefinitions>

                                                <TextBox materialDesign:ColorZoneAssist.Mode="Standard"
												materialDesign:TextFieldAssist.LeadingIcon="Globe"
												materialDesign:TextFieldAssist.HasLeadingIcon="True"
												materialDesign:HintAssist.Hint="Target page URL"
												materialDesign:TextFieldAssist.TextBoxViewMargin="1 0 1 0"
												FontSize="16" MinWidth="100" FontFamily="Roboto Light" Text="{Binding TargetPageQueryText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="#FFF3F3F3" KeyDown="TextBox_KeyDown" >
                                                    <TextBox.InputBindings>
                                                        <KeyBinding Command="{Binding StartScrapingCommand}" Key="Return"/>
                                                    </TextBox.InputBindings>
                                                </TextBox>

                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="1" Margin="4,0,0,0">
                                                    <Button x:Name="helpButt" Style="{StaticResource MaterialDesignIconForegroundButton}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0" Width="16" Height="16" Padding="0" Command="{Binding OpenHelpPopupCommand, Mode=OneWay}" ToolTip="show supported pages">
                                                        <custom:PackIconMaterial Height="12" Width="12" Kind="Help"/>
                                                    </Button>
                                                    <Button x:Name="pickButt"  Style="{StaticResource MaterialDesignIconForegroundButton}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,2,0" Width="16" Height="16" Padding="0" Command="{Binding OpenCategoryPickerPopupCommand, Mode=OneWay}" ToolTip="Pick a category page" Visibility="{Binding HasCategoryPicker, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                        <custom:PackIconMaterial Height="12" Width="12" Kind="AutoFix"/>
                                                    </Button>
                                                    <Button x:Name="fromListButt" Style="{StaticResource MaterialDesignIconForegroundButton}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,2,0" Width="16" Height="16" Padding="0" Command="{Binding StartTaskFromFile2gis, Mode=OneWay}" ToolTip="From list of search queries" Visibility="{Binding HasFromListPicker, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                        <Image Height="12" Width="12" Source="media/img/list-file-12-white.png"/>
                                                    </Button>
                                                </StackPanel>
                                            </Grid>
                                            
                                            


                                            <Button x:Name="button1" Style="{StaticResource MaterialDesignFlatDarkBgButton}" materialDesign:ColorZoneAssist.Foreground="White" materialDesign:ColorZoneAssist.Mode="SecondaryDark"  materialDesign:ButtonAssist.CornerRadius="3"  HorizontalAlignment="Right" Height="32" Margin="0,0,16,0" Grid.Column="1" Command="{Binding StartScrapingCommand}" VerticalAlignment="Center" Grid.Row="1" Content="Start new task" ToolTip="Start scraping the target page"/>
                                            <StackPanel  Orientation="Horizontal"   Grid.Row="1">
                                                <TextBlock Foreground="{StaticResource MaterialDesignBodyLight}"  HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="12" Margin="0,0,6,0" ><Run Text="Using plugin:"/><Run Foreground="{StaticResource SecondaryHueMidBrush}" Text="{Binding CurrentPluginName, FallbackValue=null, Mode=OneWay, StringFormat=\{0\}}"/></TextBlock>
                                                <Button Style="{StaticResource MaterialDesignIconForegroundButton}" Command="{Binding OpenPluginOptionsCommand}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,6,0" Width="16" Height="16" Padding="0" ToolTip="plugin options" Visibility="Collapsed">
                                                    <custom:PackIconMaterial Height="12" Width="12" Kind="Cog"/>
                                                </Button>

                                            </StackPanel>

                                        </Grid>
                                    </Grid>


                                </materialDesign:Card>

                            </Grid>
                            <ListBox materialDesign:RippleAssist.IsDisabled="True" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3" Grid.RowSpan="2" Margin="4" ItemsPanel="{DynamicResource ScrapingTaskListBoxItemsPanelStyle}" ItemTemplate="{DynamicResource ScrapingTasksListBoxItemTemplate}" ItemsSource="{Binding ScrapingTasksVMS}" ItemContainerStyle="{DynamicResource ListBoxItemStyle2}" Padding="0,0,0,10" />
                            <TextBlock x:Name="taskDetailTb" Grid.ColumnSpan="3" Grid.Column="1" Margin="0,10,10,0" Grid.Row="3" TextWrapping="Wrap" Text="{Binding CurrentTaskDetail}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Background="#FF131313" Padding="2" FontSize="10.667" Visibility="{Binding CurrentTaskDetail, Converter={StaticResource VisibleIfNonNullOrEmptyString}}" TextTrimming="CharacterEllipsis" MaxHeight="19"/>
                            <Grid x:Name="dragging_area_right_Copy" Margin="0" Background="#00E41F1F" Height="48" VerticalAlignment="Top" MouseLeftButtonDown="dragging_area_right_MouseLeftButtonDown"/>

                        </Grid>

                    </materialDesign:DialogHost>
                </Grid>
            </TabItem>
            <TabItem x:Name="settings"  
				Style="{StaticResource MaterialDesignNavigationRailTabItem}" Width="64" FontFamily="Roboto" Height="64" VerticalContentAlignment="Stretch" Margin="0">
                <TabItem.Header >

                    <Grid HorizontalAlignment="Center" materialDesign:BadgedAssist.Badge="5" materialDesign:BadgedAssist.BadgePlacementMode="TopRight" Width="32" ToolTip="Settings">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="32"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <custom:PackIconFontAwesome Grid.Row="0" Kind="ToolsSolid" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                        <TextBlock Grid.Row="1" HorizontalAlignment="Center" FontSize="12" FontFamily="Roboto" Visibility="Collapsed" ><Run Text="Database"/></TextBlock>
                    </Grid>

                </TabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="48"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Button Style="{StaticResource MaterialDesignFlatDarkBgButton}" materialDesign:ColorZoneAssist.Foreground="White" materialDesign:ColorZoneAssist.Mode="SecondaryDark"  materialDesign:ButtonAssist.CornerRadius="3"   Padding="16,6" VerticalContentAlignment="Center" Command="{Binding ExitWorkspaceCommand}"  Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="20,0,0,0" Content="EXIT WORKSPACE" />
                    <StackPanel Orientation="Vertical" d:LayoutOverrides="Height" DataContext="{StaticResource ApplicationInfo}" VerticalAlignment="Top" Margin="10,0,0,0" Grid.IsSharedSizeScope="True" Grid.Row="1" Grid.RowSpan="2">
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                            <TextBlock Text="{Binding APP_TITLE}" Style="{StaticResource MaterialDesignHeadline6TextBlock}" VerticalAlignment="Center" />
                            <TextBlock Text="{Binding APP_VERSION}" Style="{StaticResource MaterialDesignSubtitle1TextBlock}" Margin="6,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" />
                        </StackPanel>
                        <StackPanel Margin="0,0,0,10">
                            <TextBlock Text="{Binding APP_SHORT_DESCRIPTION}" Foreground="{StaticResource MaterialDesignBody}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                            <TextBlock Text="{Binding APP_VERSION_NOTE}" Foreground="{StaticResource MaterialDesignBodyLight}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                        </StackPanel>
                        <Grid Margin="0,3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" SharedSizeGroup="key"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Version"/>
                            <TextBlock Text="{Binding APP_VERSION}" Grid.Column="1" Margin="6,0,0,0" HorizontalAlignment="Left"/>
                        </Grid>
                        <Grid Margin="0,3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" SharedSizeGroup="key"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Contact developer:" />
                            <TextBlock Text="{Binding APP_DEVELOPER_EMAIL}" Grid.Column="1" Margin="6,0,0,0" Foreground="#FF4EB6E6" Cursor="Hand" ToolTip="Click to copy" MouseLeftButtonDown="TextBlock_MouseLeftButtonDown" HorizontalAlignment="Left"/>
                        </Grid>
                        <Grid Margin="0,3" Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" SharedSizeGroup="key"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Report issues &amp; Contribute:"/>
                            <TextBlock Grid.Column="1" Margin="6,0,0,0" ><Hyperlink  Style="{StaticResource MaterialDesignCaptionHyperlink}"><Run Text="{Binding APP_GITHUB_URL}" /></Hyperlink></TextBlock>
                        </Grid>
                        <Grid Margin="0,3" Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" SharedSizeGroup="key"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="none:"/>
                            <TextBlock Text="" Grid.Column="1" Margin="6,0,0,0"/>
                        </Grid>
                    </StackPanel>
                    <Grid x:Name="dragging_area_middle_Copy1" Margin="0" Background="#00E41F1F" MouseDown="Grid_MouseDown_1" Height="48" VerticalAlignment="Top" PreviewMouseLeftButtonDown="dragging_area_PreviewMouseLeftButtonDown"/>
                </Grid>
            </TabItem>
        </TabControl>
        <Grid x:Name="WorkspaceSetupPanel" Background="{StaticResource MaterialDesignPaper}" Visibility="{Binding IsWorkspaceSetupMode, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.ColumnSpan="2" MouseLeftButtonDown="WorkspaceSetupPanel_MouseLeftButtonDown" Grid.RowSpan="2" d:IsHidden="True" >
            <Grid.RowDefinitions>
                <RowDefinition Height="255*"/>
                <RowDefinition Height="214*"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.IsSharedSizeScope="True" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" MaxWidth="600">
                <Grid x:Name="pickFolder" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,12,0,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="key" />
                        <ColumnDefinition/>
                        <ColumnDefinition Width="22"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Foreground="{StaticResource MaterialDesignBodyLight}"  Text="Select the working directory" VerticalAlignment="Center"/>
                    <TextBox materialDesign:HintAssist.Hint="Select the working directory" 
                             Grid.Column="1" Margin="8,0" MinWidth="250" VerticalAlignment="Center" Text="{Binding WorkingDirectoryInputValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="13.333"/>
                    <Button Style="{StaticResource MaterialDesignIconForegroundButton}" Command="{Binding PickWorkspaceFolderCommand}"
						ToolTip="Open working folder" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2" Width="24" Height="24">
                        <custom:PackIconMaterial Kind="FolderOpen"/>
                    </Button>

                </Grid>
                <Grid x:Name="pickPlugin" VerticalAlignment="Center" Margin="0,8,0,24">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="key" />
                        <ColumnDefinition/>
                        <ColumnDefinition Width="22"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock  Foreground="{StaticResource MaterialDesignBodyLight}" Text="Select the plugin" VerticalAlignment="Center"/>

                    <ComboBox IsEnabled="{Binding IsCreateModeOrOpenMode}"
  materialDesign:HintAssist.Hint="Plugin"
  MinWidth="140"
  ItemsSource="{Binding AllPluginPickerPlugins}" 
                        ItemTemplate="{DynamicResource PluginsPickerComboBoxItemTemplate}" 
                        Grid.Column="1" VerticalAlignment="Center" Margin="8,0" SelectedItem="{Binding PluginPickerInputValue}">

                        <ComboBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ComboBox.ItemsPanel>
                    </ComboBox>
                    <Button Style="{StaticResource MaterialDesignIconForegroundButton}" Command="{Binding PickPluginFileCommand}"
                		ToolTip="Open plugin dll file" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2" Width="24" Height="24">
                        <custom:PackIconMaterial Kind="FolderOpen"/>
                    </Button>

                </Grid>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Button x:Name="closeButt" Style="{StaticResource MaterialDesignFlatButton}" materialDesign:ColorZoneAssist.Foreground="White" materialDesign:ColorZoneAssist.Mode="SecondaryDark"  materialDesign:ButtonAssist.CornerRadius="3"  HorizontalAlignment="Center" VerticalAlignment="Center" Content="Close" Margin="10,0" Padding="16,6" Visibility="Collapsed"/>

                    <Button x:Name="createWSbutt" Style="{StaticResource MaterialDesignFlatDarkBgButton}" materialDesign:ColorZoneAssist.Foreground="White" materialDesign:ColorZoneAssist.Mode="SecondaryDark"  materialDesign:ButtonAssist.CornerRadius="3"  HorizontalAlignment="Center" VerticalAlignment="Center"  Margin="0" Padding="16,6" VerticalContentAlignment="Center" Command="{Binding OpenWorkspaceCommand, Mode=OneWay}" CommandParameter="{Binding WorkingDirectoryInputValue}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock Text="OPEN WORKSPACE" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,4,0"/>
                            <custom:PackIconMaterial Kind="ChevronRight" Width="14" Height="14" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Button>

                </StackPanel>
            </StackPanel>
            <Grid Grid.Row="1" d:LayoutOverrides="Height" HorizontalAlignment="Center" MinWidth="330" Margin="0,0,0,10" Visibility="{Binding RecentlyOpenedWorkspaces.Count, Converter={StaticResource IntToVisibilityConverter}, Mode=OneWay}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="32"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Foreground="{StaticResource MaterialDesignBodyLight}" Text="Recent" FontSize="16" d:LayoutOverrides="Height" HorizontalAlignment="Left" VerticalAlignment="Center" />
                <ItemsControl  x:Name="listView" ItemsSource="{Binding RecentlyOpenedWorkspaces}" ItemTemplate="{DynamicResource RecentWorkspaceItemTemlate}" ItemsPanel="{DynamicResource RecentsWorkspacesItemsPanelTemplate}" d:LayoutOverrides="Height" Grid.Row="1" HorizontalContentAlignment="Stretch"/>

            </Grid>

        </Grid>
        <Grid x:Name="windowControl" Grid.ColumnSpan="2" d:IsHidden="True">
            <StackPanel FlowDirection="RightToLeft" Orientation="Horizontal" Margin="0" Height="24" VerticalAlignment="Top" HorizontalAlignment="Right">
                <Button x:Name="button" materialDesign:ButtonAssist.CornerRadius="0" Style="{DynamicResource ButtonWndowControlsStyle}"  HorizontalAlignment="Right" Height="24" Margin="0" Width="32" VerticalAlignment="Center" Command="{Binding CloseWindowCommand}">
                    <custom:PackIconMaterial Kind="WindowClose" Width="10" Height="10"/>
                </Button>
                <Button x:Name="maximizeButt"  Style="{DynamicResource ButtonWndowControlsStyle}"
					materialDesign:ButtonAssist.CornerRadius="0"
                        
					HorizontalAlignment="Right" Height="24" Margin="0" Width="32" VerticalAlignment="Center" Foreground="#FF818181" FontFamily="Roboto" Click="button2_Click">
                    <Image x:Name="maximizeButtImg"  Width="10" Height="10" Source="media/img/maximize-10-white.png" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Button>
                <Button x:Name="mnimizeButton" materialDesign:ButtonAssist.CornerRadius="0" Style="{DynamicResource ButtonWndowControlsStyle}" HorizontalAlignment="Right" Height="24" Margin="0" Width="32" VerticalAlignment="Center" Foreground="#FF818181" Click="mnimizeButton_Click" FontFamily="Roboto">
                    <Image  Width="10" Height="10" Source="media/img/minimize-10-white.png" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
